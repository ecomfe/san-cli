!function(e){function a(a){for(var n,o,i=a[0],c=a[1],s=a[2],d=0,u=[];d<i.length;d++)o=i[d],Object.prototype.hasOwnProperty.call(t,o)&&t[o]&&u.push(t[o][0]),t[o]=0;for(n in c)Object.prototype.hasOwnProperty.call(c,n)&&(e[n]=c[n]);for(E&&E(a);u.length;)u.shift()();return r.push.apply(r,s||[]),l()}function l(){for(var e,a=0;a<r.length;a++){for(var l=r[a],n=!0,i=1;i<l.length;i++){var c=l[i];0!==t[c]&&(n=!1)}n&&(r.splice(a--,1),e=o(o.s=l[0]))}return e}var n={},t={3:0},r=[];function o(a){if(n[a])return n[a].exports;var l=n[a]={i:a,l:!1,exports:{}};return e[a].call(l.exports,l,l.exports,o),l.l=!0,l.exports}o.e=function(){return Promise.resolve()},o.m=e,o.c=n,o.d=function(e,a,l){o.o(e,a)||Object.defineProperty(e,a,{enumerable:!0,get:l})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,a){if(1&a&&(e=o(e)),8&a)return e;if(4&a&&"object"==typeof e&&e&&e.__esModule)return e;var l=Object.create(null);if(o.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),2&a&&"string"!=typeof e)for(var n in e)o.d(l,n,function(a){return e[a]}.bind(null,n));return l},o.n=function(e){var a=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(a,"a",a),a},o.o=function(e,a){return Object.prototype.hasOwnProperty.call(e,a)},o.p="/san-cli/";var i=window.webpackJsonp=window.webpackJsonp||[],c=i.push.bind(i);i.push=a,i=i.slice();for(var s=0;s<i.length;s++)a(i[s]);var E=c;r.push([114,0]),l()}({114:function(e,a,l){var n=l(1),t=l(61),r=l(15).default;e.exports=l(15),e.exports.default=n(r,t,[])},15:function(e,a,l){"use strict";l.r(a),function(e){l.d(a,"default",(function(){return i}));var n,t,r,o=l(0);class i extends o.a{inited(){e.hub&&e.hub.fire&&e.hub.fire("changed",{level:0,children:[{level:2,title:"使用命令",hash:"%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4"},{level:2,title:"参数说明",hash:"%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E",children:[{level:3,title:"跟性能相关",hash:"%E8%B7%9F%E6%80%A7%E8%83%BD%E7%9B%B8%E5%85%B3"},{level:3,title:"跟配置相关",hash:"%E8%B7%9F%E9%85%8D%E7%BD%AE%E7%9B%B8%E5%85%B3"},{level:3,title:"报告和日志相关",hash:"%E6%8A%A5%E5%91%8A%E5%92%8C%E6%97%A5%E5%BF%97%E7%9B%B8%E5%85%B3"},{level:3,title:"其他",hash:"%E5%85%B6%E4%BB%96"}]}]})}}r={},(t="components")in(n=i)?Object.defineProperty(n,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[t]=r}.call(this,l(2))},61:function(e,a,l){var n=' <div class="content"><div class="markdown"><h1 id="%E7%94%9F%E4%BA%A7%E6%89%93%E5%8C%85"><a class="header-anchor" href="#%E7%94%9F%E4%BA%A7%E6%89%93%E5%8C%85">#</a> 生产打包</h1> <p><code>san build</code>是生产环境打包，下面详细说下用法。</p> <h2 id="%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4"><a class="header-anchor" href="#%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4">#</a> 使用命令</h2> <pre class="language-bash"><code class="language-bash">san build <span class="token punctuation">[</span>entry<span class="token punctuation">]</span></code></pre> <ul> <li>entry：入口文件，用于编译单一文件，不传入，则从当前<a href="https://zh.wikipedia.org/wiki/%E5%B7%A5%E4%BD%9C%E7%9B%AE%E9%8C%84" target="_blank">工作目录</a>，读取 Config 文件的 pages 配置项。</li> </ul> <p>打包结束之后，build 命令默认会生成产出物报表，效果如下：</p> <p><img src="'+l(4)(l(62))+'" alt=""/></p> <h2 id="%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E"><a class="header-anchor" href="#%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E">#</a> 参数说明</h2> <h3 id="%E8%B7%9F%E6%80%A7%E8%83%BD%E7%9B%B8%E5%85%B3"><a class="header-anchor" href="#%E8%B7%9F%E6%80%A7%E8%83%BD%E7%9B%B8%E5%85%B3">#</a> 跟性能相关</h3> <ul> <li><code>--modern</code> 是否使用 modern mode 打包，值为 true 或 false，默认是 false，modern mode<a href="/san-cli/modern-mode/">参考</a></li> </ul> <h3 id="%E8%B7%9F%E9%85%8D%E7%BD%AE%E7%9B%B8%E5%85%B3"><a class="header-anchor" href="#%E8%B7%9F%E9%85%8D%E7%BD%AE%E7%9B%B8%E5%85%B3">#</a> 跟配置相关</h3> <ul> <li><code>--dest</code> 产出文件目录</li> <li><code>--mode，--m</code> 环境指示，值为 development 或 production，默认是 production</li> <li><code>--config，--config-file</code> 指定 san config 内容，值为 san config 文件的地址，默认会从目录中找寻 san.config.js 文件</li> </ul> <h3 id="%E6%8A%A5%E5%91%8A%E5%92%8C%E6%97%A5%E5%BF%97%E7%9B%B8%E5%85%B3"><a class="header-anchor" href="#%E6%8A%A5%E5%91%8A%E5%92%8C%E6%97%A5%E5%BF%97%E7%9B%B8%E5%85%B3">#</a> 报告和日志相关</h3> <ul> <li><code>--analyze，--analyzer</code>：是否使用 webpack-analyze-bunlde 输出包分析，值为 true 或 false，默认 false</li> <li><code>--profile</code>：是否展示编译进度日志，值为 true 或 false，默认是 false</li> <li><code>--report</code>：是否输将包分析报表生成为单个 HTML 文件，值为 true 或 false 或者文件名，默认 false，仅生成 Webpack Stats JSON 文件</li> <li><code>--stats-json，--statsJson</code>：是否输将包分析报表生成为 stats.json，值为 true 或 false 或者文件名，默认是 false</li> <li><code>--no-colors</code>：是否展示无色彩 log，值为 true 或 false，默认是 false</li> </ul> <h3 id="%E5%85%B6%E4%BB%96"><a class="header-anchor" href="#%E5%85%B6%E4%BB%96">#</a> 其他</h3> <ul> <li><code>--watch，--w</code> 是否监听代码变化</li> <li><code>--no-clean</code> 是否在 building 之前不删除上一次的产出文件，值为 true 或 false，默认 false</li> <li><code>--remote</code> 将编译产出远程部署到目标机器的名称，具体使用可<a href="/san-cli/deployment/">参考文档</a></li> </ul> </div></div> ';e.exports=n},62:function(e,a,l){"use strict";l.r(a),a.default=l.p+"static/img/format-stats.png"}});