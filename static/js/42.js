(window.webpackJsonp=window.webpackJsonp||[]).push([[42,23],{133:function(e,n,o){var c=o(1),t=o(96),d=o(35).default;e.exports=o(35),e.exports.default=c(d,t,[])},35:function(e,n,o){"use strict";o.r(n),function(e){o.d(n,"default",(function(){return a}));var c,t,d,s=o(0);class a extends s.a{inited(){e.hub&&e.hub.fire&&e.hub.fire("changed",{level:0})}}d={},(t="components")in(c=a)?Object.defineProperty(c,t,{value:d,enumerable:!0,configurable:!0,writable:!0}):c[t]=d}.call(this,o(2))},4:function(e,n,o){"use strict";e.exports=function(e,n){return n||(n={}),"string"!=typeof(e=e&&e.__esModule?e.default:e)?e:(n.hash&&(e+=n.hash),n.maybeNeedQuotes&&/[\t\n\f\r "'=<>`]/.test(e)?'"'.concat(e,'"'):e)}},96:function(e,n,o){var c=' <div class="content markdown-content"><div class="markdown"><h1 id="%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86">配置管理</h1> <p><code>San CLI</code> 的配置文件为<code>san.config.js</code>，该文件放在项目的根目录下，当执行 <code>San CLI</code> 命令时，<code>San CLI</code> 会自动读取<code>san.config.js</code>的内容，在项目创建后，首先需要修改<code>san.config.js</code>来配置文件打包等选项。<code>San CLI UI</code> 将配置的每一项转换为表单，同时将配置项的语义直观的展示在页面，无需查找文档，直接在<code>San CLI UI</code>中修改表单，保存后即可看到<code>san.config.js</code>对应位置的修改。</p> <p>在<code>San CLI UI</code>中，通过配置管理来集中查看、修改项目的各种配置文件。默认的可进行管理的配置文件有 san 项目配置文件和 eslint 配置文件。当然也支持用户定义其他可配置项，配置的自定义参见插件开发部分。</p> <img src="'+o(4)(o(97))+'" style="width:80%;max-width:1000px"/> </div></div> ';e.exports=c},97:function(e,n,o){"use strict";o.r(n),n.default=o.p+"static/img/configuration.png"}}]);