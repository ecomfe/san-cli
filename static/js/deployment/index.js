!function(n){function e(e){for(var a,o,l=e[0],r=e[1],c=e[2],u=0,E=[];u<l.length;u++)o=l[u],Object.prototype.hasOwnProperty.call(t,o)&&t[o]&&E.push(t[o][0]),t[o]=0;for(a in r)Object.prototype.hasOwnProperty.call(r,a)&&(n[a]=r[a]);for(i&&i(e);E.length;)E.shift()();return p.push.apply(p,c||[]),s()}function s(){for(var n,e=0;e<p.length;e++){for(var s=p[e],a=!0,l=1;l<s.length;l++){var r=s[l];0!==t[r]&&(a=!1)}a&&(p.splice(e--,1),n=o(o.s=s[0]))}return n}var a={},t={11:0,52:0},p=[];function o(e){if(a[e])return a[e].exports;var s=a[e]={i:e,l:!1,exports:{}};return n[e].call(s.exports,s,s.exports,o),s.l=!0,s.exports}o.e=function(){return Promise.resolve()},o.m=n,o.c=a,o.d=function(n,e,s){o.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:s})},o.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},o.t=function(n,e){if(1&e&&(n=o(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var s=Object.create(null);if(o.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)o.d(s,a,function(e){return n[e]}.bind(null,a));return s},o.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return o.d(e,"a",e),e},o.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},o.p="/san-cli/";var l=window.webpackJsonp=window.webpackJsonp||[],r=l.push.bind(l);l.push=e,l=l.slice();for(var c=0;c<l.length;c++)e(l[c]);var i=r;p.push([122,0]),s()}({122:function(n,e,s){var a=s(1),t=s(71),p=s(24).default;n.exports=s(24),n.exports.default=a(p,t,[])},24:function(n,e,s){"use strict";s.r(e),function(n){s.d(e,"default",(function(){return l}));var a,t,p,o=s(0);class l extends o.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0,children:[{level:2,title:"环境配置",hash:"%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE"},{level:2,title:"参数配置",hash:"%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE",children:[{level:3,title:"基础参数",hash:"%E5%9F%BA%E7%A1%80%E5%8F%82%E6%95%B0"},{level:3,title:"静态域名替换相关",hash:"%E9%9D%99%E6%80%81%E5%9F%9F%E5%90%8D%E6%9B%BF%E6%8D%A2%E7%9B%B8%E5%85%B3"},{level:3,title:"fsr 相关（百度内部使用请参考fsr）",hash:"fsr-%E7%9B%B8%E5%85%B3%EF%BC%88%E7%99%BE%E5%BA%A6%E5%86%85%E9%83%A8%E4%BD%BF%E7%94%A8%E8%AF%B7%E5%8F%82%E8%80%83fsr%EF%BC%89"}]},{level:2,title:"简单说实现",hash:"%E7%AE%80%E5%8D%95%E8%AF%B4%E5%AE%9E%E7%8E%B0",children:[{level:3,title:"写法引入方式",hash:"%E5%86%99%E6%B3%95%E5%BC%95%E5%85%A5%E6%96%B9%E5%BC%8F"}]}]})}}p={},(t="components")in(a=l)?Object.defineProperty(a,t,{value:p,enumerable:!0,configurable:!0,writable:!0}):a[t]=p}.call(this,s(2))},71:function(n,e){n.exports=' <div class="content markdown-content"><div class="markdown"><h1 id="%E9%83%A8%E7%BD%B2">部署</h1> <p>在执行 <code>san build [entry] --remote &lt;remote-name&gt;</code> 时，使用的就是该页面的远程部署解决方案，支持从项目本地将生产环境编译产出直接远程部署到目标开发机。</p> <p>使用时，需要进行相应的 <strong>环境配置</strong> 以及 <strong>参数配置</strong>，下面具体说明如何配置。</p> <h2 id="%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE">环境配置</h2> <p>remote-name 对应着一组开发机配置项，开发机配置项需要在 .env.production 文件中进行配置，具体写法参考<a href="/san-cli/env/">环境变量</a>。</p> <h2 id="%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE">参数配置</h2> <h3 id="%E5%9F%BA%E7%A1%80%E5%8F%82%E6%95%B0">基础参数</h3> <h4 id="receiver"><code>receiver</code></h4> <p>远程服务的 receiver.php 地址，receiver.php 文件内容<a href="https://github.com/fex-team/fis3-deploy-http-push/blob/master/receiver.php" target="_blank">参考</a></p> <h4 id="templatepath"><code>templatePath</code></h4> <p>远程服务的模板存放地址，产出文件中的 .tpl 结尾的文件会上传到此路径下。</p> <h4 id="staticpath"><code>staticPath</code></h4> <p>远程服务的静态文件存放地址。</p> <h3 id="%E9%9D%99%E6%80%81%E5%9F%9F%E5%90%8D%E6%9B%BF%E6%8D%A2%E7%9B%B8%E5%85%B3">静态域名替换相关</h3> <h4 id="staticdomain"><code>staticDomain</code></h4> <p>静态文件服务域名。</p> <h4 id="baseurl"><code>baseUrl</code></h4> <p>需要被替换成远程静态文件服务域名的域名串</p> <h3 id="fsr-%E7%9B%B8%E5%85%B3%EF%BC%88%E7%99%BE%E5%BA%A6%E5%86%85%E9%83%A8%E4%BD%BF%E7%94%A8%E8%AF%B7%E5%8F%82%E8%80%83fsr%EF%BC%89">fsr 相关（百度内部使用请参考<a href="http://agroup.baidu.com/fis/md/article/196978?side=folder" target="_blank">fsr</a>）</h3> <h4 id="disablefsr"><code>disableFsr</code></h4> <p>是否禁用 fsr 安全部署服务，值为 true 或 false，默认是 false ，使用 fsr 安全部署服务（此字段必须设置为 true，除百度内部外）</p> <h4 id="host"><code>host</code></h4> <p>配置此项的前提是，disableFsr 为 false，启用了 fsr 安全部署服务，用于替换原来的 reciever 配置，拼接成该此项设置的域名。</p> <h6 id="%E4%BE%8B%E5%A6%82"><strong><em>例如</em></strong></h6> <pre class="language-bash"><code class="language-bash"><span class="token comment"># 环境配置文件 .env.production</span>\n<span class="token assign-left variable">SAN_REMOTE_XIAOMING_DISABLE_FSR</span><span class="token operator">=</span>true\n<span class="token assign-left variable">SAN_REMOTE_XIAOMING_RECEIVER</span><span class="token operator">=</span>http://www.xiaoming.com:8080/receiver.php\n<span class="token assign-left variable">SAN_REMOTE_XIAOMING_TEMPLATE_PATH</span><span class="token operator">=</span>/home/work/nginx_static/html/test/template\n<span class="token assign-left variable">SAN_REMOTE_XIAOMING_STATIC_PATH</span><span class="token operator">=</span>/home/work/nginx_static/html/test/static\n<span class="token assign-left variable">SAN_REMOTE_XIAOMING_STATIC_DOMAIN</span><span class="token operator">=</span>http://test.bdstatic.com:8888\n<span class="token assign-left variable">SAN_REMOTE_XIAOMING_BASE_URL</span><span class="token operator">=</span>http://www.cdnstatic.com\n<span class="token assign-left variable">SAN_REMOTE_XIAOMING_HOST</span><span class="token operator">=</span>http://www.xiaoming.com:8080\n\n<span class="token comment"># 执行</span>\nsan build --remote xiaoming</code></pre> <div class="warning"><p class="info-title">上例解读</p> <ol> <li>命名规则：<strong>SAN_REMOTE_（ 大写的 remote-name 名称）_ (大写的参数名称，驼峰处改用下划线分隔)</strong>；</li> <li>将 tpl、js、css 文件代码中 http://www.cdnstatic.com 替换成了 http://test.bdstatic.com:8888 。</li> </ol> </div> <h2 id="%E7%AE%80%E5%8D%95%E8%AF%B4%E5%AE%9E%E7%8E%B0">简单说实现</h2> <p>使用<a href="https://github.com/jinzhan/deploy-files" target="_blank">deploy-files</a>插件。</p> <p>安装 deploy-files：</p> <pre class="language-bash"><code class="language-bash"><span class="token function">npm</span> i deploy-files</code></pre> <h3 id="%E5%86%99%E6%B3%95%E5%BC%95%E5%85%A5%E6%96%B9%E5%BC%8F">写法引入方式</h3> <p>webpack 插件的使用方式</p> <p>引入：</p> <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> DeployPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'deploy-files/webpack-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>方式一：webpack 链式使用方式</p> <pre class="language-js"><code class="language-js">chainConfig<span class="token punctuation">.</span><span class="token function">plugin</span><span class="token punctuation">(</span><span class="token string">\'deploy-files\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>DeployPlugin<span class="token punctuation">,</span> <span class="token punctuation">[</span>remoteObj<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>方式二：webpack Config 中配置 plugins</p> <pre class="language-js"><code class="language-js">plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token operator">...</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">DeployPlugin</span><span class="token punctuation">(</span>remoteObj<span class="token punctuation">)</span>\n<span class="token punctuation">]</span></code></pre> <div class="warning"> <p>remoteObj 即为上方部署中的相关配置参数。</p> </div> </div></div> '}});