!function(e){function t(t){for(var o,i,c=t[0],a=t[1],s=t[2],d=0,p=[];d<c.length;d++)i=c[d],Object.prototype.hasOwnProperty.call(r,i)&&r[i]&&p.push(r[i][0]),r[i]=0;for(o in a)Object.prototype.hasOwnProperty.call(a,o)&&(e[o]=a[o]);for(u&&u(t);p.length;)p.shift()();return l.push.apply(l,s||[]),n()}function n(){for(var e,t=0;t<l.length;t++){for(var n=l[t],o=!0,c=1;c<n.length;c++){var a=n[c];0!==r[a]&&(o=!1)}o&&(l.splice(t--,1),e=i(i.s=n[0]))}return e}var o={},r={18:0,59:0},l=[];function i(t){if(o[t])return o[t].exports;var n=o[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.e=function(){return Promise.resolve()},i.m=e,i.c=o,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)i.d(n,o,function(t){return e[t]}.bind(null,o));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="/san-cli/";var c=window.webpackJsonp=window.webpackJsonp||[],a=c.push.bind(c);c.push=t,c=c.slice();for(var s=0;s<c.length;s++)t(c[s]);var u=a;l.push([113,0]),n()}({113:function(e,t,n){var o=n(1),r=n(60),l=n(14).default;e.exports=n(14),e.exports.default=o(l,r,[])},14:function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return c}));var o,r,l,i=n(0);class c extends i.a{inited(){e.hub&&e.hub.fire&&e.hub.fire("changed",{level:0,children:[{level:2,title:"使用命令",hash:"%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4"},{level:2,title:"参数说明",hash:"%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E"}]})}}l={},(r="components")in(o=c)?Object.defineProperty(o,r,{value:l,enumerable:!0,configurable:!0,writable:!0}):o[r]=l}.call(this,n(2))},60:function(e,t){e.exports=' <div class="content"><div class="markdown"><h1 id="%E5%BC%80%E5%8F%91%E6%89%93%E5%8C%85">开发打包</h1> <p><code>san serve</code>是开发环境打包，下面详细说下用法。</p> <h2 id="%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4">使用命令</h2> <pre class="language-bash"><code class="language-bash">san serve <span class="token punctuation">[</span>entry<span class="token punctuation">]</span></code></pre> <ul> <li>entry：入口文件，用于编译单一文件，不传入，则从当前<a href="https://zh.wikipedia.org/wiki/%E5%B7%A5%E4%BD%9C%E7%9B%AE%E9%8C%84" target="_blank">工作目录</a>，读取 Config 文件的 pages 配置项</li> </ul> <h2 id="%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E">参数说明</h2> <ul> <li><code>--port，--p</code>：指定 devServer 端口号，默认为 8899</li> <li><code>--use-https</code>： 请求头是否使用 https，默认为 false</li> <li><code>--host，--H</code>：指定 devServer 域名，默认为 0.0.0.0</li> <li><code>--public</code>：指定 HMR client 的 URL，默认http://localhost:8899/sockjs-node</li> <li><code>--open，--O</code>：是否在编译打包完成后，自动在浏览器中打开页面地址，值为 true 或 false，默认是 false</li> <li><code>--qrcode</code>：是否输出页面地址二维码，值为 true 或 false，默认是 true</li> <li><code>--mode，--m</code>：环境指示，值为 development 或 production，默认是 development</li> <li><code>--config，--config-file</code>：指定 san config 内容，值为 san config 文件的地址，默认会从目录中找寻 san.config.js 文件</li> </ul> </div></div> '}});